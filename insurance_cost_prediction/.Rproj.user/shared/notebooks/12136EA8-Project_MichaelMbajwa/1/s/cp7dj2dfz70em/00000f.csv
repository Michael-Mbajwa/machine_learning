"0","# To get the optimal regression tree model, there are some interesting hyper-parameters that I will play around."
"0","# To do that, I will implement a grid that I will manually loop over. The grid will contain these hyperparameters:"
"0","# minsplit: the minimum number of observations that must exist in a node in order for a split to be attempted."
"0","# maxdepth: Set the maximum depth of any node of the final tree, with the root node counted as depth 0. Values greater than 30 rpart will give nonsense results on 32-bit machines."
"0",""
"0","# define grid"
"0","hyper_grid <- expand.grid("
"0","  minsplit = seq(10, 20, 5),"
"0","  maxdepth = seq(10, 30, 5)"
"0",")"
"0",""
"0","regression_result = data.frame() # after training each model with a specific combination of hyperparameters, I will evaluate the model on the test set and store the result in this dataframe"
"0",""
"0","for (i in 1:nrow(hyper_grid)) {"
"0","  # get minsplit, maxdepth, xval values at row i"
"0","  min_split <- hyper_grid$minsplit[i]"
"0","  max_depth <- hyper_grid$maxdepth[i]"
"0",""
"0","  # train a model and store in the list"
"0","  regression_tree <- rpart("
"0","    formula = charges ~ .,"
"0","    data    = train,"
"0","    control = list(minsplit = min_split, maxdepth = max_depth)"
"0","    )"
"0","  "
"0","  # evaluate the performance of the regression tree"
"0","  reg_tree_predict <- predict(regression_tree, test)"
"0",""
"0","  # calculate evaluation metrics"
"0","  reg_tree_mae <- MLmetrics::MAE(reg_tree_predict, test$charges) # Mean Absolute Error (MAE)"
"0","  reg_tree_Rmse <- MLmetrics::RMSE(reg_tree_predict, test$charges) # Root Mean Square Error (RMSE)"
"0","  reg_tree_R2 <- MLmetrics::R2_Score(reg_tree_predict, test$charges) # adjusted r2 score"
"0","  "
"0","  output <- c(min_split, max_depth, reg_tree_mae, reg_tree_Rmse, reg_tree_R2)"
"0","  "
"0","  # Using rbind() to append the output of one iteration to the dataframe"
"0","  regression_result = rbind(regression_result, output)"
"0","}"
"0",""
"0","# naming the columns"
"0","colnames(regression_result)<-c(""minsplit"", ""maxdepth"", ""MAE"", ""RMSE"", ""R2_Score"")"
